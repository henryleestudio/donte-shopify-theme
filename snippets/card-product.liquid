{% comment %}
  Renders a product card

  Accepts:
  - card_product: {Object} Product Liquid object (optional)
  - media_aspect_ratio: {String} Size of the product image card. Values are "square" and "portrait". Default is "square" (optional)
  - image_shape: {String} Image mask to apply to the product image card. Values are "arch", "blob", "chevronleft", "chevronright", "diamond", "parallelogram", and "round". (optional)
  - show_secondary_image: {Boolean} Show the secondary image on hover. Default: false (optional)
  - show_vendor: {Boolean} Show the product vendor. Default: false
  - show_rating: {Boolean} Show the product rating. Default: false
  - extend_height: {Boolean} Card height extends to available container space. Default: true (optional)
  - lazy_load: {Boolean} Image should be lazy loaded. Default: true (optional)
  - skip_styles: {Boolean} Don't include component styles. Useful when rendering multiple product cards in a loop. Default: false (optional)
  - quick_add: {Boolean} Show the quick add button.
  - section_id: {String} The ID of the section that contains this card.
  - horizontal_class: {Boolean} Add a card--horizontal class if set to true. Default: false (optional)
  - horizontal_quick_add: {Boolean} Changes the quick add button styles when set to true. Default: false (optional)
  - placeholder_image: {String} The placeholder image to use when no product exists. Default: 'product-apparel-2' (optional)

  Usage:
  {% render 'card-product', show_vendor: section.settings.show_vendor %}
{% endcomment %}
{%- unless skip_styles -%}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}

  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'quick-order-list.css' | asset_url | stylesheet_tag }}
  {{ 'quantity-popover.css' | asset_url | stylesheet_tag }}
{%- endunless -%}
{%- if card_product and card_product != empty -%}
  {%- liquid
    assign ratio = 1
    if card_product.featured_media and media_aspect_ratio == 'portrait'
      assign ratio = 0.8
    elsif card_product.featured_media and media_aspect_ratio == 'adapt'
      assign ratio = card_product.featured_media.aspect_ratio
    endif
    if ratio == 0 or ratio == null
      assign ratio = 1
    endif

    assign hover_enabled = show_secondary_image

    # Turn off hover if ANY option is Color/Colour (regardless of Size, Fit, etc.)
    assign has_color = false
    assign has_graphic = false
    for opt in card_product.options_with_values
      assign opt_norm = opt.name | downcase | strip
      if opt_norm contains 'color' or opt_norm contains 'colour'
        assign has_color = true
        break
      endif

      if opt_norm contains 'graphic'
        assign has_graphic = true
        break
      endif
    endfor

    if has_color
      assign hover_enabled = false
    endif

    if has_graphic
      assign hover_enabled = false
    endif
  -%}
  <div
    class="card-wrapper product-card-wrapper underline-links-hover"
    data-hover-enabled="{{ hover_enabled }}"
  >
    <div
      class="
        card card--{{ settings.card_style }}
        {% if card_product.featured_media %} card--media{% else %} card--text{% endif %}
        {% if settings.card_style == 'card' %} color-{{ settings.card_color_scheme }} gradient{% endif %}
        {% if image_shape and image_shape != 'default' %} card--shape{% endif %}
        {% if extend_height %} card--extend-height{% endif %}
        {% if card_product.featured_media == nil and settings.card_style == 'card' %} ratio{% endif %}
        {% if horizontal_class %} card--horizontal{% endif %}
      "
      style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;"
    >
      <div
        class="card__inner {% if settings.card_style == 'standard' %}color-{{ settings.card_color_scheme }} gradient{% endif %}{% if card_product.featured_media or settings.card_style == 'standard' %} ratio{% endif %}"
        style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;"
      >
        {%- if card_product.featured_media -%}
          <a
            href="{{ card_product.url }}"
            class="card__media-link"
            aria-hidden="true"
            tabindex="-1"
          >
            <div class="card__media{% if image_shape and image_shape != 'default' %} shape--{{ image_shape }} color-{{ settings.card_color_scheme }} gradient{% endif %}">
              <div class="media media--transparent{% if hover_enabled %} media--hover-effect{% endif %}">
                {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
                <img
                  data-card-primary-image="true"
                  srcset="
                    {%- if card_product.featured_media.width >= 165 -%}{{ card_product.featured_media | image_url: width: 165 }} 165w,{%- endif -%}
                    {%- if card_product.featured_media.width >= 360 -%}{{ card_product.featured_media | image_url: width: 360 }} 360w,{%- endif -%}
                    {%- if card_product.featured_media.width >= 533 -%}{{ card_product.featured_media | image_url: width: 533 }} 533w,{%- endif -%}
                    {%- if card_product.featured_media.width >= 720 -%}{{ card_product.featured_media | image_url: width: 720 }} 720w,{%- endif -%}
                    {%- if card_product.featured_media.width >= 940 -%}{{ card_product.featured_media | image_url: width: 940 }} 940w,{%- endif -%}
                    {%- if card_product.featured_media.width >= 1066 -%}{{ card_product.featured_media | image_url: width: 1066 }} 1066w,{%- endif -%}
                    {{ card_product.featured_media | image_url }} {{ card_product.featured_media.width }}w
                  "
                  src="{{ card_product.featured_media | image_url: width: 533 }}"
                  sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                  alt="{{ card_product.featured_media.alt | escape }}"
                  class="motion-reduce"
                  {% unless lazy_load == false %}
                    loading="lazy"
                  {% endunless %}
                  width="{{ card_product.featured_media.width }}"
                  height="{{ card_product.featured_media.height }}"
                >
                {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}

                {%- if card_product.media[1] != null and hover_enabled -%}
                  <img
                    srcset="
                      {%- if card_product.media[1].width >= 165 -%}{{ card_product.media[1] | image_url: width: 165 }} 165w,{%- endif -%}
                      {%- if card_product.media[1].width >= 360 -%}{{ card_product.media[1] | image_url: width: 360 }} 360w,{%- endif -%}
                      {%- if card_product.media[1].width >= 533 -%}{{ card_product.media[1] | image_url: width: 533 }} 533w,{%- endif -%}
                      {%- if card_product.media[1].width >= 720 -%}{{ card_product.media[1] | image_url: width: 720 }} 720w,{%- endif -%}
                      {%- if card_product.media[1].width >= 940 -%}{{ card_product.media[1] | image_url: width: 940 }} 940w,{%- endif -%}
                      {%- if card_product.media[1].width >= 1066 -%}{{ card_product.media[1] | image_url: width: 1066 }} 1066w,{%- endif -%}
                      {{ card_product.media[1] | image_url }} {{ card_product.media[1].width }}w
                    "
                    src="{{ card_product.media[1] | image_url: width: 533 }}"
                    sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                    alt=""
                    class="motion-reduce"
                    loading="lazy"
                    width="{{ card_product.media[1].width }}"
                    height="{{ card_product.media[1].height }}"
                  >
                {%- endif -%}
              </div>
            </div>
          </a>
        {%- endif -%}
        <div class="card__content">
          <div class="card__information">
            <h3
              class="card__heading"
              {% if card_product.featured_media == null and settings.card_style == 'standard' %}
                id="title-{{ section_id }}-{{ card_product.id }}"
              {% endif %}
            >
              <a
                href="{{ card_product.url }}"
                id="StandardCardNoMediaLink-{{ section_id }}-{{ card_product.id }}"
                class="full-unstyled-link"
                aria-labelledby="StandardCardNoMediaLink-{{ section_id }}-{{ card_product.id }} NoMediaStandardBadge-{{ section_id }}-{{ card_product.id }}"
              >
                {{ card_product.title | escape }}
              </a>
            </h3>
          </div>
          <div class="card__badge {{ settings.badge_position }}">
            {%- if card_product.available == false -%}
              <span
                id="NoMediaStandardBadge-{{ section_id }}-{{ card_product.id }}"
                class="badge badge--bottom-left color-{{ settings.sold_out_badge_color_scheme }}"
              >
                {{- 'products.product.sold_out' | t -}}
              </span>
            {%- elsif card_product.compare_at_price > card_product.price and card_product.available -%}
              <span
                id="NoMediaStandardBadge-{{ section_id }}-{{ card_product.id }}"
                class="badge badge--bottom-left color-{{ settings.sale_badge_color_scheme }}"
              >
                {{- 'products.product.on_sale' | t -}}
              </span>
            {%- endif -%}
          </div>
        </div>
      </div>
      <div class="card__content card-footer{% if settings.card_style == 'standard' %} card-footer-standard{% endif %}">
        <div class="card__information">
          <div class="heading-card-inner">
            <div class="heading-rating-title">
              {% comment %}
                {% if show_rating %}
                  {% liquid
                    assign rating_value = card_product.metafields.reviews.rating.value.rating | default: 0
                    assign rating_max = card_product.metafields.reviews.rating.value.scale_max | default: 5
                    assign rating_count = card_product.metafields.reviews.rating_count | default: 0

                    assign rating_decimal = 0
                    assign decimal = rating_value | modulo: 1
                    if decimal >= 0.3 and decimal <= 0.7
                      assign rating_decimal = 0.5
                    elsif decimal > 0.7
                      assign rating_decimal = 1
                    endif
                  %}
                  <div
                    class="rating"
                    role="img"
                    aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: rating_value, rating_max: rating_max }}"
                  >
                    <span
                      aria-hidden="true"
                      class="rating-star"
                      style="--rating: {{ rating_value | floor }}; --rating-max: {{ rating_max }}; --rating-decimal: {{ rating_decimal }};"
                    ></span>
                  </div>
                  <p class="rating-text caption">
                    <span aria-hidden="true"> {{ rating_value }} / {{ rating_max }} </span>
                  </p>
                  <p class="rating-count caption">
                    <span aria-hidden="true">({{ rating_count }})</span>
                    <span class="visually-hidden">
                      {{ rating_count }}
                      {{ 'accessibility.total_reviews' | t }}
                    </span>
                  </p>
                {% endif %}
              {% endcomment %}

              <!-- Start of Judge.me code -->
              <div
                style="{{ jm_style }}"
                class="jdgm-widget jdgm-preview-badge"
                data-id="{{ card_product.id }}"
                data-auto-install="false"
              >
                {{ card_product.metafields.judgeme.badge }}
              </div>
              <!-- End of Judge.me code -->

              <h3
                class="card__heading{% if card_product.featured_media or settings.card_style == 'standard' %} h5{% endif %}"
                {% if card_product.featured_media or settings.card_style == 'card' %}
                  id="title-{{ section_id }}-{{ card_product.id }}"
                {% endif %}
              >
                <a
                  href="{{ card_product.url }}"
                  id="CardLink-{{ section_id }}-{{ card_product.id }}"
                  class="full-unstyled-link"
                  aria-labelledby="CardLink-{{ section_id }}-{{ card_product.id }} Badge-{{ section_id }}-{{ card_product.id }}"
                >
                  {{ card_product.title | escape }}
                </a>
              </h3>
            </div>
            <div class="card-information">
              {%- if show_vendor -%}
                <span class="visually-hidden">{{ 'accessibility.vendor' | t }}</span>
                <div class="caption-with-letter-spacing light">{{ card_product.vendor }}</div>
              {%- endif -%}

              <span class="caption-large light">{{ block.settings.description | escape }}</span>

              {% render 'price', product: card_product, price_class: '', show_compare_at_price: true %}
              {%- if card_product.quantity_price_breaks_configured? -%}
                {% if card_product.variants.size == 1 and quick_add == 'bulk' %}
                  {% liquid
                    assign quantity_rule = card_product.selected_or_first_available_variant.quantity_rule
                    assign has_qty_rules = false
                    if quantity_rule.increment > 1 or quantity_rule.min > 1 or quantity_rule.max != null
                      assign has_qty_rules = true
                    endif
                  %}
                  <quantity-popover>
                    <button class="card__information-volume-pricing-note card__information-volume-pricing-note--button card__information-volume-pricing-note--button-{{ settings.card_text_alignment }} quantity-popover__info-button--icon-only button button button--tertiary medium-hide small-hide">
                      <span class="caption">{{ 'products.product.volume_pricing.note' | t }}</span>
                    </button>
                    <button class="card__information-volume-pricing-note card__information-volume-pricing-note--button card__information-volume-pricing-note--button-{{ settings.card_text_alignment }} quantity-popover__info-button--icon-with-label button button--tertiary large-up-hide">
                      <span class="caption">{{ 'products.product.volume_pricing.note' | t }}</span>
                    </button>
                {% else %}
                  <div class="card__information-volume-pricing-note">
                    <span class="caption">{{ 'products.product.volume_pricing.note' | t }}</span>
                  </div>
                {% endif %}
                {% if card_product.variants.size == 1 and quick_add == 'bulk' %}
                  <div
                    class="global-settings-popup quantity-popover__info"
                    tabindex="-1"
                    hidden
                    id="quantity-popover-info-{{ card_product.selected_or_first_available_variant.id }}"
                  >
                    {%- if has_qty_rules -%}
                      <div class="quantity__rules caption no-js-hidden">
                        {%- if quantity_rule.increment > 1 -%}
                          <span class="divider">
                            {{- 'products.product.quantity.multiples_of' | t: quantity: quantity_rule.increment -}}
                          </span>
                        {%- endif -%}
                        {%- if quantity_rule.min > 1 -%}
                          <span class="divider">
                            {{- 'products.product.quantity.min_of' | t: quantity: quantity_rule.min -}}
                          </span>
                        {%- endif -%}
                        {%- if quantity_rule.max != null -%}
                          <span class="divider">
                            {{- 'products.product.quantity.max_of' | t: quantity: quantity_rule.max -}}
                          </span>
                        {%- endif -%}
                      </div>
                    {%- endif -%}
                    <button
                      class="button-close button button--tertiary large-up-hide"
                      type="button"
                      aria-label="{{ 'accessibility.close' | t }}"
                    >
                      {{- 'icon-close.svg' | inline_asset_content -}}
                    </button>
                    {%- if card_product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                      <volume-pricing class="parent-display">
                        <ul class="list-unstyled">
                          <li>
                            <span>{{ card_product.selected_or_first_available_variant.quantity_rule.min }}+</span>
                            {%- assign price = card_product.selected_or_first_available_variant.price
                              | money_with_currency
                            -%}
                            <span>{{ 'sections.quick_order_list.each' | t: money: price }}</span>
                          </li>
                          {%- for price_break in card_product.selected_or_first_available_variant.quantity_price_breaks -%}
                            <li>
                              <span>
                                {{- price_break.minimum_quantity -}}
                                <span aria-hidden="true">+</span></span
                              >
                              {%- assign price = price_break.price | money_with_currency -%}
                              <span> {{ 'sections.quick_order_list.each' | t: money: price }}</span>
                            </li>
                          {%- endfor -%}
                        </ul>
                      </volume-pricing>
                    {%- endif -%}
                  </div>
                  </quantity-popover>
                {% endif %}
              {%- endif -%}
            </div>
          </div>
          {% assign product_form_id = 'quick-add-' | append: section_id | append: card_product.id %}
          {% if quick_add == 'standard' %}
            <div class="quick-add no-js-hidden">
              <product-form data-section-id="{{ section.id }}">
                {%- form 'product',
                  card_product,
                  id: product_form_id,
                  class: 'form',
                  novalidate: 'novalidate',
                  data-type: 'add-to-cart-form'
                -%}
                  <div
                    class="variant-selects"
                    id="variant-selects-{{ section.id }}-{{ card_product.id }}"
                    data-section="{{ section.id }}"
                    {% if card_product.variants.size == 1 %}
                      style="display:none;"
                    {% endif %}
                  >
                    {%- comment -%} ---- ROW 1: COLORS (if present) ---- {%- endcomment -%}
                    {% for option in card_product.options_with_values %}
                      {% assign opt_normalized = option.name | downcase | strip | replace: ' ', '' %}
                      {% if opt_normalized contains 'color' or opt_normalized contains 'colour' %}
                        <div
                          class="variant-row variant-group variant-group--{{ option.position }} variant-group--swatches"
                          role="group"
                          aria-label="{{ option.name }}"
                          data-option-position="{{ option.position }}"
                        >
                          <div class="variant-values">
                            {% for value in option.values %}
                              {% assign value_handle = value | handle %}

                              {%- comment -%} Is this color available on ANY in-stock variant? {%- endcomment -%}
                              {% assign value_available = false %}
                              {% for v in card_product.variants %}
                                {% case option.position %}
                                  {% when 1 -%}
                                    {%- assign vopt = v.option1 %}
                                  {% when 2 -%}
                                    {%- assign vopt = v.option2 %}
                                  {% when 3 -%}
                                    {%- assign vopt = v.option3 %}
                                {% endcase %}
                                {% if vopt == value and v.available %}
                                  {% assign value_available = true %}
                                  {% break %}
                                {% endif %}
                              {% endfor %}

                              {%- comment -%} swatch resolution: variant metafield -> product metafield -> fallback {%- endcomment -%}
                              {% assign swatch = '' %}
                              {% assign found_swatch = false %}
                              {% for v in card_product.variants %}
                                {% case option.position %}
                                  {% when 1 -%}
                                    {%- assign vopt = v.option1 -%}
                                  {% when 2 -%}
                                    {%- assign vopt = v.option2 -%}
                                  {% when 3 -%}
                                    {%- assign vopt = v.option3 -%}
                                {% endcase %}
                                {% if vopt == value and v.metafields.custom.swatch != blank %}
                                  {% assign swatch = v.metafields.custom.swatch %}
                                  {% assign found_swatch = true %}
                                  {% break %}
                                {% endif %}
                              {% endfor %}
                              {% unless found_swatch %}
                                {% assign swatch_key = 'swatch_' | append: value_handle %}
                                {% if card_product.metafields.custom[swatch_key] != blank %}
                                  {% assign swatch = card_product.metafields.custom[swatch_key] %}
                                {% endif %}
                              {% endunless %}
                              {% if swatch == blank %}
                                {% case value_handle %}
                                  {% when 'black' -%}
                                    {%- assign swatch = '#000000' %}
                                  {% when 'white' -%}
                                    {%- assign swatch = '#ffffff' %}
                                  {% when 'red' -%}
                                    {%- assign swatch = '#f03d2c' %}
                                  {% when 'blue' -%}
                                    {%- assign swatch = '#0047ff' %}
                                  {% when 'green' -%}
                                    {%- assign swatch = '#0a8a0a' %}
                                  {% when 'yellow' -%}
                                    {%- assign swatch = '#ffd400' %}
                                  {% when 'grey', 'gray' -%}
                                    {%- assign swatch = '#9e9e9e' %}
                                  {% when 'purple' -%}
                                    {%- assign swatch = '#996eca' %}
                                  {% when 'heather-grey' -%}
                                    {%- assign swatch = 'url(https://cdn.shopify.com/s/files/1/1026/0635/files/heather-gray-color.png?v=1755285813)' %}
                                  {% when 'purple-tye-dye' -%}
                                    {%- assign swatch = 'url(https://cdn.shopify.com/s/files/1/1026/0635/files/purple-tye-dye-color.png?v=1755287554)' %}
                                  {% when 'teal-tye-dye' -%}
                                    {%- assign swatch = 'url(https://cdn.shopify.com/s/files/1/1026/0635/files/teal-tye-dye-color.png?v=1755287554)' %}
                                  {% when 'cream' -%}
                                    {%- assign swatch = '#efeae0' %}
                                  {% when 'charcoal' -%}
                                    {%- assign swatch = '#3b3b3b' %}
                                  {% else -%}
                                    {%- assign swatch = '#ffffff' %}
                                {% endcase %}
                              {% endif %}

                              {% assign swatch_lower = swatch | downcase %}
                              {% if swatch_lower == '#fff'
                                or swatch_lower == '#ffffff'
                                or swatch_lower contains 'url('
                                or swatch_lower contains 'gradient'
                                or swatch_lower contains 'rgb(255'
                              %}
                                {# swatch_border assignment removed as unused #}
                              {% endif %}

                              <input
                                type="radio"
                                class="variant-option-input visually-hidden"
                                id="Option-{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                name="options[{{ option.name }}]"
                                value="{{ value | escape }}"
                                {% if option.selected_value == value %}
                                  checked
                                {% endif %}
                                data-option-position="{{ option.position }}"
                                {% unless value_available %}
                                  disabled aria-disabled="true"
                                {% endunless %}
                              >
                              <label
                                for="Option-{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                class="variant-label variant-label--swatch{% unless value_available %} is-unavailable{% endunless %}"
                                data-option-position="{{ option.position }}"
                                data-option-value="{{ value | escape }}"
                                title="{{ value }}"
                                aria-label="{{ value }}{% unless value_available %} (unavailable){% endunless %}"
                                data-tippy-content="{{ value }}"
                              >
                                <span class="swatch" aria-hidden="true"></span>
                                <span class="visually-hidden">{{ value }}</span>
                              </label>
                            {% endfor %}
                          </div>
                        </div>
                      {% endif %}
                    {% endfor %}

                    {%- comment -%} ---- ROW 2: SIZES (first non-color option) ---- {%- endcomment -%}
                    {% assign sizes_done = false %}
                    {% for option in card_product.options_with_values %}
                      {% assign opt_normalized = option.name | downcase | strip | replace: ' ', '' %}

                      {%- comment -%} compute is_color without using output tags {%- endcomment -%}
                      {% assign is_color = false %}
                      {% if opt_normalized contains 'color' or opt_normalized contains 'colour' %}
                        {% assign is_color = true %}
                      {% endif %}

                      {% if is_color == false and sizes_done == false %}
                        <div
                          class="variant-row variant-group variant-group--{{ option.position }}"
                          role="group"
                          aria-label="{{ option.name }}"
                          data-option-position="{{ option.position }}"
                        >
                          <div class="variant-values">
                            {% for value in option.values %}
                              {%- comment -%} mark unavailable sizes (any in-stock variant with this value?) {%- endcomment -%}
                              {% assign value_available = false %}
                              {% for v in card_product.variants %}
                                {% case option.position %}
                                  {% when 1 -%}
                                    {%- assign vopt = v.option1 %}
                                  {% when 2 -%}
                                    {%- assign vopt = v.option2 %}
                                  {% when 3 -%}
                                    {%- assign vopt = v.option3 %}
                                {% endcase %}
                                {% if vopt == value and v.available %}
                                  {% assign value_available = true %}
                                  {% break %}
                                {% endif %}
                              {% endfor %}

                              <input
                                type="radio"
                                class="variant-option-input visually-hidden"
                                id="Option-{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                name="options[{{ option.name }}]"
                                value="{{ value | escape }}"
                                {% if option.selected_value == value %}
                                  checked
                                {% endif %}
                                data-option-position="{{ option.position }}"
                                {% unless value_available %}
                                  disabled aria-disabled="true"
                                {% endunless %}
                              >
                              <label
                                for="Option-{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                class="variant-label{% unless value_available %} is-unavailable{% endunless %}"
                                data-option-position="{{ option.position }}"
                                data-option-value="{{ value | escape }}"
                                title="{{ value }}{% unless value_available %} (unavailable){% endunless %}"
                                aria-disabled="{% unless value_available %}true{% else %}false{% endunless %}"
                              >
                                {{ value }}
                              </label>
                            {% endfor %}
                          </div>
                        </div>
                        {% assign sizes_done = true %}
                      {% endif %}
                    {% endfor %}

                    <script type="application/json" class="ProductVariantsJSON">
                      {{ card_product.variants | json }}
                    </script>

                    {% assign color_pos = 0 %}
                    {% for opt in card_product.options_with_values %}
                      {% assign opt_norm = opt.name | downcase | strip | replace: ' ', '' %}
                      {% if opt_norm contains 'color' or opt_norm contains 'colour' %}
                        {% assign color_pos = opt.position %}
                        {% break %}
                      {% endif %}
                    {% endfor %}

                    <script type="application/json" class="VariantMediaJSON">
                      [
                      {% for v in card_product.variants %}
                        {%- assign media = v.featured_media -%}

                        {%- assign variant_color = '' -%}
                        {%- if color_pos == 1 -%}{% assign variant_color = v.option1 %}
                        {%- elsif color_pos == 2 -%}{% assign variant_color = v.option2 %}
                        {%- elsif color_pos == 3 -%}{% assign variant_color = v.option3 %}
                        {%- endif -%}

                        {%- if media == blank and variant_color != blank -%}
                          {%- assign vc_down = variant_color | downcase -%}
                          {%- assign vc_handle = variant_color | handle -%}
                          {%- for m in card_product.media -%}
                            {%- assign alt_down = m.alt | downcase -%}
                            {%- if alt_down contains vc_down or alt_down contains vc_handle -%}
                              {%- assign media = m -%}
                              {%- break -%}
                            {%- endif -%}
                          {%- endfor -%}
                        {%- endif -%}

                        {%- assign media = media | default: card_product.featured_media -%}

                        {
                          "id": {{ v.id }},
                          "has_media": {% if media %}true{% else %}false{% endif %},
                          "alt": {% if media %}{{ media.alt | json }}{% else %}null{% endif %},
                          "width": {% if media %}{{ media.width | json }}{% else %}null{% endif %},
                          "height": {% if media %}{{ media.height | json }}{% else %}null{% endif %},
                          "src_165": {% if media %}{{ media | image_url: width: 165 | json }}{% else %}null{% endif %},
                          "src_360": {% if media %}{{ media | image_url: width: 360 | json }}{% else %}null{% endif %},
                          "src_533": {% if media %}{{ media | image_url: width: 533 | json }}{% else %}null{% endif %},
                          "src_720": {% if media %}{{ media | image_url: width: 720 | json }}{% else %}null{% endif %},
                          "src_940": {% if media %}{{ media | image_url: width: 940 | json }}{% else %}null{% endif %},
                          "src_1066": {% if media %}{{ media | image_url: width: 1066 | json }}{% else %}null{% endif %}
                        }{% unless forloop.last %},{% endunless %}
                      {% endfor %}
                      ]
                    </script>
                  </div>

                  {%- comment -%} Hidden input the form submits (we update it via JS) {%- endcomment -%}
                  <input
                    type="hidden"
                    name="id"
                    value="{{ card_product.selected_or_first_available_variant.id }}"
                    class="product-variant-id"
                  >

                  <div class="quick-add-actions">
                    {% if card_product.selected_or_first_available_variant.available == false %}
                      {% render 'quantity-input',
                        variant: card_product.selected_or_first_available_variant,
                        min: 1,
                        class: 'unavailable',
                        value: 1,
                        name: 'quantity'
                      %}
                    {% else %}
                      {% render 'quantity-input',
                        variant: card_product.selected_or_first_available_variant,
                        min: 1,
                        value: 1,
                        name: 'quantity'
                      %}
                    {% endif %}

                    <button
                      id="{{ product_form_id }}-submit"
                      type="submit"
                      name="add"
                      class="quick-add__submit button button--full-width button--primary{% if horizontal_quick_add %} card--horizontal__quick-add{% endif %}"
                      aria-haspopup="dialog"
                      aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                      aria-live="polite"
                      data-sold-out-message="true"
                      {% if card_product.selected_or_first_available_variant.available == false %}
                        disabled
                      {% endif %}
                    >
                      <span
                        class="price-item price-item--regular"
                        data-variant-price="{{ card_product.selected_or_first_available_variant.price }}"
                        data-price-display="{{ section_id }}-{{ card_product.id }}"
                      >
                        {%- if card_product.selected_or_first_available_variant.available -%}
                          {{ 'products.product.add_to_cart' | t }} -
                          {{ card_product.selected_or_first_available_variant.price | money_without_trailing_zeros }}
                        {%- else -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                      </span>
                      {%- if horizontal_quick_add -%}
                        <span class="icon-wrap">
                          {{- 'icon-plus.svg' | inline_asset_content -}}
                        </span>
                      {%- endif -%}
                      {%- render 'loading-spinner' -%}
                    </button>
                  </div>
                {%- endform -%}
              </product-form>
            </div>
          {% elsif quick_add == 'bulk' %}
            {% if card_product.variants.size == 1 %}
              <quick-add-bulk
                data-min="{{ card_product.selected_or_first_available_variant.quantity_rule.min }}"
                id="quick-add-bulk-{{ card_product.selected_or_first_available_variant.id }}-{{ section.id }}"
                class="quick-add-bulk"
                data-index="{{ card_product.selected_or_first_available_variant.id }}"
              >
                {% if card_product.selected_or_first_available_variant.available == false %}
                  <button
                    id="{{ product_form_id }}-submit"
                    type="submit"
                    name="add"
                    class="quick-add__submit button button--full-width button--primary"
                    aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                    data-sold-out-message="true"
                    disabled
                  >
                    <span>{{ 'products.product.sold_out' | t }}</span>
                    <span class="sold-out-message hidden">
                      {{ 'products.product.sold_out' | t }}
                    </span>
                  </button>
                {% else %}
                  {% render 'quantity-input', variant: card_product.selected_or_first_available_variant, min: 0 %}
                {% endif %}
              </quick-add-bulk>
            {% else %}
              <div class="quick-add no-js-hidden">
                {%- liquid
                  assign product_form_id = 'quick-add-' | append: section_id | append: card_product.id
                -%}
                <modal-opener
                  id="QuickBulk-{{ card_product.id }}-{{ section_id }}"
                  data-modal="#QuickAddBulk-{{ card_product.id }}-{{ section.id }}"
                >
                  <button
                    id="{{ product_form_id }}-submit"
                    type="submit"
                    name="add"
                    class="quick-add__submit button button--full-width button--primary"
                    aria-haspopup="dialog"
                    aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                    data-product-url="{{ card_product.url }}"
                  >
                    {{ 'products.product.choose_options' | t }}
                    {%- render 'loading-spinner' -%}
                  </button>
                </modal-opener>
                <modal-dialog
                  id="QuickAddBulk-{{ card_product.id }}-{{ section_id }}"
                  class="quick-add-modal color-{{ section.settings.color_scheme }}"
                >
                  <div
                    role="dialog"
                    aria-label="{{ 'products.product.choose_product_options' | t: product_name: card_product.title | escape }}"
                    aria-modal="true"
                    class="quick-add-modal__content quick-add-modal__content--bulk global-settings-popup"
                    tabindex="-1"
                  >
                    <button
                      id="ModalClose-{{ card_product.id }}"
                      type="button"
                      class="quick-add-modal__toggle"
                      aria-label="{{ 'accessibility.close' | t }}"
                    >
                      {{- 'icon-close.svg' | inline_asset_content -}}
                    </button>
                    <div
                      id="QuickAddInfo-{{ card_product.id }}"
                      class="quick-add-modal__content-info quick-add-modal__content-info--bulk"
                    >
                      <div class="quick-add__content-info__media">
                        <div class="quick-add__info">
                          {%- if card_product.featured_media -%}
                            <div
                              class="quick-add__product-media"
                            >
                              <div class="quick-add__product-container global-media-settings">
                                {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
                                <img
                                  srcset="
                                    {%- if card_product.featured_media.width >= 165 -%}{{ card_product.featured_media | image_url: width: 165 }} 165w,{%- endif -%}
                                    {%- if card_product.featured_media.width >= 360 -%}{{ card_product.featured_media | image_url: width: 360 }} 360w,{%- endif -%}
                                    {%- if card_product.featured_media.width >= 533 -%}{{ card_product.featured_media | image_url: width: 533 }} 533w,{%- endif -%}
                                    {%- if card_product.featured_media.width >= 720 -%}{{ card_product.featured_media | image_url: width: 720 }} 720w,{%- endif -%}
                                    {%- if card_product.featured_media.width >= 940 -%}{{ card_product.featured_media | image_url: width: 940 }} 940w,{%- endif -%}
                                    {%- if card_product.featured_media.width >= 1066 -%}{{ card_product.featured_media | image_url: width: 1066 }} 1066w,{%- endif -%}
                                    {{ card_product.featured_media | image_url }} {{ card_product.featured_media.width }}w
                                  "
                                  src="{{ card_product.featured_media | image_url: width: 533 }}"
                                  sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                                  alt="{{ card_product.featured_media.alt | escape }}"
                                  class="motion-reduce"
                                  {% unless lazy_load == false %}
                                    loading="lazy"
                                  {% endunless %}
                                  width="{{ card_product.featured_media.width }}"
                                  height="{{ card_product.featured_media.height }}"
                                >
                                {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}
                              </div>
                            </div>
                          {%- endif -%}
                          <a
                            {% if card_product == blank %}
                              role="link" aria-disabled="true"
                            {% else %}
                              href="{{ card_product.url }}"
                            {% endif %}
                            class="link product__view-details animate-arrow small-hide medium-hide"
                          >
                            {{ 'products.product.view_full_details' | t -}}
                            {{- 'icon-arrow.svg' | inline_asset_content -}}
                          </a>
                        </div>
                        <div class="quick-add-modal__content-info--bulk-details large-up-hide">
                          <a href="{{ card_product.url }}" class="full-unstyled-link">
                            <h3>{{ card_product.title | escape }}</h3>
                          </a>
                          {% render 'price', product: card_product, price_class: '', show_compare_at_price: true %}
                          {%- if card_product.quantity_price_breaks_configured? -%}
                            <div class="card__information-volume-pricing-note">
                              <span class="caption">{{ 'products.product.volume_pricing.note' | t }}</span>
                            </div>
                          {%- endif -%}
                        </div>
                      </div>
                      <div>
                        <div class="quick-add-modal__content-info--bulk-details small-hide medium-hide">
                          <a href="{{ card_product.url }}" class="full-unstyled-link">
                            <h3 class="h2">
                              {{ card_product.title | escape }}
                            </h3>
                          </a>
                          {% render 'price', product: card_product, price_class: '', show_compare_at_price: true %}
                          {%- if card_product.quantity_price_breaks_configured? -%}
                            <div class="card__information-volume-pricing-note">
                              <span class="caption">{{ 'products.product.volume_pricing.note' | t }}</span>
                            </div>
                          {%- endif -%}
                        </div>
                        <bulk-modal
                          id="QuickBulkModal-{{ card_product.id }}-{{ section_id }}"
                          data-url="{{ card_product.url }}"
                          data-section-id="{{ section_id }}"
                          data-product-id="{{ card_product.id }}"
                        >
                        </bulk-modal>
                      </div>
                    </div>
                  </div>
                </modal-dialog>
              </div>
            {% endif %}
          {% endif %}
          <div class="card__badge {{ settings.badge_position }}">
            {%- if card_product.available == false -%}
              <span
                id="Badge-{{ section_id }}-{{ card_product.id }}"
                class="badge badge--bottom-left color-{{ settings.sold_out_badge_color_scheme }}"
              >
                {{- 'products.product.sold_out' | t -}}
              </span>
            {%- elsif card_product.compare_at_price > card_product.price and card_product.available -%}
              <span
                id="Badge-{{ section_id }}-{{ card_product.id }}"
                class="badge badge--bottom-left color-{{ settings.sale_badge_color_scheme }}"
              >
                {{- 'products.product.on_sale' | t -}}
              </span>
            {%- endif -%}
          </div>
        </div>
      </div>
    </div>
  </div>
{%- else -%}
  {%- liquid
    assign ratio = 1
    assign placeholder = true
    if media_aspect_ratio == 'portrait'
      assign ratio = 0.8
    endif
  -%}
  <div class="card-wrapper product-card-wrapper underline-links-hover">
    <div
      class="
        card card--{{ settings.card_style }}
        {% if extend_height %} card--extend-height{% endif %}
        {% if image_shape and image_shape != 'default' %} card--shape{% endif %}
        {% if settings.card_style == 'card' %} color-{{ settings.card_color_scheme }} gradient{% endif %}
      "
      style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;"
    >
      <div
        class="card__inner{% if settings.card_style == 'standard' %} color-{{ settings.card_color_scheme }} gradient{% endif %} ratio"
      >
        <div
          class="card__media {% if image_shape and image_shape != 'default' %} shape--{{ image_shape }} color-{{ settings.card_color_scheme }} gradient{% endif %}"
        >
          <div
            class="media media--transparent"
          >
            {%- if placeholder_image -%}
              {{ placeholder_image | placeholder_svg_tag: 'placeholder-svg' }}
            {%- else -%}
              {{ 'product-apparel-2' | placeholder_svg_tag: 'placeholder-svg' }}
            {% endif %}
          </div>
        </div>
      </div>
      <div class="card__content">
        <div class="card__information">
          <h3 class="card__heading card__heading--placeholder{% if settings.card_style == 'standard' %} h5{% endif %}">
            <a role="link" aria-disabled="true" class="full-unstyled-link">
              {{ 'onboarding.product_title' | t }}
            </a>
          </h3>
          <div class="card-information">
            {%- if show_vendor -%}
              <span class="visually-hidden">{{ 'accessibility.vendor' | t }}</span>
              <div class="caption-with-letter-spacing light">{{ 'products.product.vendor' | t }}</div>
            {%- endif -%}
            {% render 'price', placeholder: placeholder, show_compare_at_price: true %}
          </div>
        </div>
      </div>
    </div>
  </div>
{%- endif -%}

<style>
    /* ==== CARD FOUNDATION ====================================================== */
    .product-card-wrapper{
    /* border */
    --pc-card-border-width: {{ settings.card_border_thickness | default: 0 | append: 'px' }};
    --pc-card-border-opacity: {{ settings.card_border_opacity | default: 0 | times: 0.01 }};

    /* radius */
    --pc-card-radius: {{ settings.card_corner_radius | default: 0 | append: 'px' }};

    /* shadow */
    --pc-card-shadow-x: {{ settings.card_shadow_horizontal_offset | default: 0 | append: 'px' }};
    --pc-card-shadow-y: {{ settings.card_shadow_vertical_offset | default: 4 | append: 'px' }};
    --pc-card-shadow-blur: {{ settings.card_shadow_blur | default: 5 | append: 'px' }};
    --pc-card-shadow-opacity: {{ settings.card_shadow_opacity | default: 0 | times: 0.01 }};
  }

    .product-card-wrapper .card{
    border-width: var(--pc-card-border-width);
    border-style: solid;
    border-color: rgba(var(--color-foreground), var(--pc-card-border-opacity));
    border-radius: var(--pc-card-radius);

    /* shadow from settings */
    box-shadow:
      var(--pc-card-shadow-x)
      var(--pc-card-shadow-y)
      var(--pc-card-shadow-blur)
      rgba(var(--color-foreground), var(--pc-card-shadow-opacity));
  }

  /* footer’s frosted overlay: leave room for the border */
  .product-card-wrapper .card__content.card-footer::before{
    margin: var(--pc-card-border-width);
  }

  /* ensure the footer corners follow the card radius */
  .product-card-wrapper .card__content.card-footer{
    border-bottom-left-radius: var(--pc-card-radius);
    border-bottom-right-radius: var(--pc-card-radius);
  }
    .contains-card--product {
      border: 0 !important;
    }

    .product-card-wrapper .card__inner {
      overflow: hidden;
      border-radius: inherit;
      -webkit-mask-image: -webkit-radial-gradient(#000, #000);
      width: 100%;
      border: 0 !important;
    }

    .card__media {
      background: var(--color-background) !important;
      margin-bottom: 90px !important;
    }

    /* ==== TYPO/UTILS ========================================================== */

    a.button {
      font-weight: 900;
      text-transform: capitalize;
      letter-spacing: 0;
    }

    .card__heading.h5 {
      font-family: var(--font-heading) !important;
      letter-spacing: 0;
      text-transform: capitalize;
      font-size: 1.75rem;
      line-height: 1;
    }

    .badge {
      position: absolute;
      z-index: 1;
      background: var(--color-background);
      color: var(--color-foreground);
      border: var(--badge-border-width, var(--inputs-border-width, 1px)) solid currentColor;
      border-radius: var(--badge_corner_radius, var(--inputs-radius, 20px));
      padding: 6px 15px;
      font-family: var(--font-heading-family);
      font-weight: 500;
      text-transform: uppercase;
    }

    .button:before,
    .shopify-challenge__button:before,
    .customer button:before,
    .shopify-payment-button__button--unbranded:before,
    .button:after,
    .shopify-challenge__button:after,
    .customer button:after,
    .shopify-payment-button__button--unbranded:after {
      display: none;
    }

    /* ==== CARD FOOTER (FROSTED) ============================================== */
    .product-card-wrapper .card__content.card-footer {
      position: absolute;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 2;
      background: transparent;
      overflow: visible;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;
      pointer-events: none;
      padding: 5px;
    }
    .product-card-wrapper .card__content.card-footer > * {
      position: relative;
      z-index: 1;
      pointer-events: auto;
    }
    .product-card-wrapper .card__content.card-footer::before {
      content: '';
      position: absolute;
      inset: 0;
      z-index: 0;
      background: rgba(255, 255, 255, 0.58);
      -webkit-backdrop-filter: blur(9px);
      backdrop-filter: blur(9px);
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }
    .card__information {
      z-index: 1;
      padding: 15px 10px 5px 10px !important;
    }

    /* ==== PRICE & META ======================================================== */
    .card .price.price--on-sale,
    .card .price {
      margin-top: 0 !important;
    }

    .card .price__sale s.price-item.price-item--regular {
      margin: 0;
    }

    .price--on-sale .price-item--regular {
      color: rgb(168, 168, 168) !important;
      letter-spacing: 0;
      font-size: 1.55rem !important;
    }
    .price .price-item {
      letter-spacing: -1px !important;
      font-size: 1.55rem;
    }

    /* ==== QUICK ADD (hover reveal) =========================================== */
    .card__media-link {
      display: block;
      position: absolute;
      inset: 0;
      z-index: 1;
      pointer-events: auto;
    }
    .card-wrapper a:not(.card__media-link),
    .card-wrapper .card__media-link {
      pointer-events: auto;
    }

    .product-card-wrapper .quick-add {
      position: relative;
      z-index: 2;
      pointer-events: auto;
      display: block;
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.25s ease;
      margin: 0 !important;
      padding: 2px !important;
    }
    .product-card-wrapper.qa-open .quick-add {
      max-height: 500px;
    }

    /* QUICK ADD — submit button (merged + complete) */
    .product-card-wrapper .quick-add__submit {
      display: block !important;
      position: relative;
      overflow: hidden;
      width: 66.66% !important;

      /* size */
      min-width: 0 !important;
      min-height: 0 !important;
      height: 40px !important;
      padding: 10px 20px 12px 20px !important;


      /* type */
      font-family: var(--font-heading-family);
      font-size: 1.8rem;
      letter-spacing: 0px;
      text-transform: uppercase;
      line-height: 0.8;

      /* motion */
      transition: color 0.3s ease, border-color 0.3s ease;
    }

    /* animated reverse-fill */
    .product-card-wrapper .quick-add__submit::before {
      content: '';
      position: absolute;
      inset: 0;
      background: #ffffff;
      transform: scaleX(0);
      transform-origin: left center;
      transition: transform 0.35s ease;
      z-index: 0;
      pointer-events: none;
    }

    /* keep content above the fill */
    .product-card-wrapper .quick-add__submit > * {
      position: relative;
      z-index: 1;
      font-family: var(--font-heading-family);
      font-weight: 500;
      letter-spacing: 0;
      font-size: 1.5rem;
      display: block;
      line-height: 1.15;
    }

    /* hover/focus: invert + fallback background in case ::before is disabled */
    .product-card-wrapper .quick-add__submit:hover,
    .product-card-wrapper .quick-add__submit:focus-visible {
      color: #121212 !important;
      border-color: #121212;
      background: #ffffff !important;
    }
    .product-card-wrapper .quick-add__submit:hover::before,
    .product-card-wrapper .quick-add__submit:focus-visible::before {
      transform: scaleX(1);
    }

    /* disabled state (and hover/focus on disabled) */
    .product-card-wrapper .quick-add__submit[disabled],
    .product-card-wrapper .quick-add__submit[disabled]:hover,
    .product-card-wrapper .quick-add__submit[disabled]:focus-visible {
      background: rgb(var(--color-background)) !important;
      color: #9a9a9a !important;
      border: 2px solid #9a9a9a;
      line-height: 1;
      cursor: not-allowed;
    }
    .quick-add quantity-input {
      min-height: 40px !important;
    }
    .quick-add quantity-input.unavailable,
    .quick-add .quantity.unavailable {
      opacity: 0.2;
      cursor: not-allowed;
      pointer-events: none;
    }
    .quick-add .quantity {
      border-width: var(--inputs-border-width, 1px);
      border-style: solid;
      border-color: rgb(var(--color-foreground));
      border-radius: var(--inputs-radius);
      max-width: 33.33%;
    }
    .quick-add .quantity::after,
    .quantity::before {
      display: none;
    }
    .quick-add-actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 10px;
      margin-top: 15px !important;
    }
    .quantity__button {
      width: 30px !important;
    }
    .quantity__input {
      font-family: var(--font-body-family);
      font-weight: 400;
      font-size: 1.5rem;
    }

    /* ==== LAYOUT BITS ========================================================= */
    .heading-card-inner {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: flex-start;
    }
    .card-information {
      width: 30%;
      text-align: right;
      height: auto !important;
    }
    .card-information .price.price--on-sale .price__container .price__sale {
      display: flex;
      flex-direction: column;
    }

    /* ==== VARIANTS (chips + swatches) ======================================== */
    .product-card-wrapper .variant-group {
      margin: 10px 0 8px;
    }
    .product-card-wrapper .variant-group__legend {
      font-size: 0.85rem;
      margin-bottom: 6px;
      opacity: 0.8;
    }
    .product-card-wrapper .variant-values {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
    }

    .product-card-wrapper .variant-label:not(.variant-label--swatch) {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0 12px;
      border-radius: 999px;
      cursor: pointer;
      font-size: 1.2rem;
      line-height: 1;
      user-select: none;
      border: 1px solid #c4c4c4;
      height: 36px;
      width: 36px;
      font-weight: 900;
      letter-spacing: -1px;
      cursor: pointer;
    }

    .card__content .variant-input {
      display: none;
    }

    .product-card-wrapper .variant-option-input:checked + .variant-label,
    .product-card-wrapper .variant-label.is-selected {
      border-color: var(--swatch-border, var(--color-foreground, #111));
    }
    .product-card-wrapper .variant-label.is-selected {
      box-shadow: 0 0 0 2px var(--swatch-border, var(--color-foreground, #111));
    }
    .product-card-wrapper .variant-option-input:checked + .variant-label.is-selected {
      border-width: 2px;
    }

    .product-card-wrapper .variant-label.is-unavailable {
      opacity: 0.4;
      pointer-events: auto;
    }

    .product-card-wrapper .variant-label--swatch {
      padding: 2px !important;
      border-radius: 999px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 32px !important;
      height: 32px !important;
      min-height: unset !important;
      cursor: pointer;
    }
    .product-card-wrapper .variant-label.variant-label--swatch.is-unavailable::after {
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      height: 1px;
      background: #808080;
      opacity: 1;
      transform: rotate(-45deg);
      pointer-events: none;
      z-index: 2;
      translate: -50%;
      width: 28px;
    }
    .product-card-wrapper .variant-label--swatch .swatch {
      width: 100%;
      height: 100%;
      border-radius: inherit;
      background: var(--swatch, #fff) center/cover no-repeat;
      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12);
      border: 0;
    }
    .product-card-wrapper .variant-label--swatch .swatch-name {
      display: none;
    }

    .product-card-wrapper .variant-label:hover,
    .product-card-wrapper .variant-label:focus-visible span {
      border-color: var(--swatch-border, var(--color-foreground, #111));
    }

    .quick-add variant-selects {
      display: flex;
      flex-direction: column;
      margin-bottom: 20px;
      margin-top: 0;
    }

    /* Unavailable variants: diagonal strike + disable */
    .product-card-wrapper .variant-label,
    .product-card-wrapper .variant-label--swatch {
      position: relative;
      overflow: hidden;
    }

    .product-card-wrapper .variant-label.is-unavailable {
      opacity: 0.45;
      pointer-events: auto;
      cursor: not-allowed;
    }

    .product-card-wrapper .variant-label.is-unavailable::after {
      content: '';
      position: absolute;
      left: -20%;
      right: -20%;
      top: 50%;
      height: 1px;
      background: currentColor;
      opacity: 0.7;
      transform: rotate(-45deg);
      pointer-events: auto;
      z-index: 2;
    }

    .product-card-wrapper .variant-label.is-unavailable .swatch {
      filter: opacity(0.65);
      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.15);
    }

    /* ==== IMAGE HOVER SAFEGUARD ============================================== */
    .card-wrapper[data-hover-enabled='false'] .media--hover-effect > img:nth-of-type(2) {
      display: none !important;
    }
    .card-wrapper[data-hover-enabled='false'] .media--hover-effect:hover > img:nth-of-type(1) {
      opacity: 1 !important;
      transform: none !important;
    }

    /* ==== MISC ================================================================ */
    span.jdgm-prev-badge__text {
      font-size: 1.25rem !important;
      text-transform: uppercase;
      letter-spacing: 0;
      padding-left: 2px;
      font-family: var(--font-body-family);
      font-weight: 600;
    }

    slider-component .grid__item {
      padding: 0;
    }

    .card.card--standard.card--media {
      height: 100%;
    }

    /* ==== MEDIA QUERIES ======================================================= */
    @media (prefers-reduced-motion: reduce) {
      .product-card-wrapper .quick-add__submit,
      .product-card-wrapper .quick-add__submit::before {
        transition: none;
      }
    }
    @media (max-width: 767px) {
      .product-card-wrapper .card__content.card-footer .quick-add {
        display: none !important;
      }
      .slider.slider--tablet.contains-card--standard .slider__slide:not(.collection-list__item--no-media) {
        width: 70%;
      }
      .slider-title-nav,
      .collection__title.title-wrapper {
        flex-wrap: wrap;
        row-gap: 20px;
      }
    }

    @media (max-width: 989px) {
      slider-component {
        padding: 0 !important;
      }
      .grid__item {
        padding: 0;
      }
      .card.card--standard.card--media {
        height: 100%;
      }
      .product-card-wrapper .card__heading a {
        font-size: 2.25rem;
      }
      .card__information {
        padding: 15px 20px 10px 20px !important;
      }
      slider-component ul {
        gap: 0 !important;
      }
      .collection__title.title-wrapper, .collection__title.title-wrapper h2 {
        margin: 0 !important;
      }
    }

</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.product-card-wrapper');
    if (!cards.length) return;

    const open = (el) => el.classList.add('qa-open');
    const close = (el) => el.classList.remove('qa-open');

    cards.forEach((card) => {
      card.addEventListener('mouseenter', () => open(card));
      card.addEventListener('mouseleave', () => close(card));

      card.addEventListener('focusin', () => open(card));
      card.addEventListener('focusout', (e) => {
        const next = e.relatedTarget || document.activeElement;
        if (!card.contains(next)) close(card);
      });

      let touchOpen = false;
      const onDocTouch = (evt) => {
        if (!card.contains(evt.target)) {
          touchOpen = false;
          close(card);
          document.removeEventListener('touchstart', onDocTouch);
        }
      };

      card.addEventListener(
        'touchstart',
        () => {
          if (!touchOpen) {
            touchOpen = true;
            open(card);

            setTimeout(() => document.addEventListener('touchstart', onDocTouch), 0);
          }
        },
        { passive: true }
      );
    });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const formatMoney = (cents, format = '£{{amount}}') => {
      if (typeof cents === 'string') cents = cents.replace('.', '');
      const placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
      const fmt = format || '£{{amount}}';
      const def = (v, d) => (v == null || v !== v ? d : v);
      const withDelims = (n, p, t, d) => {
        p = def(p, 2);
        t = def(t, ',');
        d = def(d, '.');
        if (isNaN(n) || n == null) return '0';
        n = (n / 100).toFixed(p);
        const parts = n.split('.');
        const whole = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + t);
        const frac = parts[1] ? d + parts[1] : '';
        return whole + frac;
      };
      const m = fmt.match(placeholderRegex);
      if (!m) return withDelims(cents, 2);
      const type = m[1];
      let value = withDelims(
        cents,
        type.includes('no_decimals') ? 0 : 2,
        type.includes('comma_separator') ? '.' : ',',
        type.includes('comma_separator') ? ',' : '.'
      );
      return fmt.replace(placeholderRegex, value);
    };

    const updatePrice = (form) => {
      const qty = form.querySelector('input[name="quantity"]');
      const priceDisplay = form.querySelector('[data-price-display]');
      if (!qty || !priceDisplay) return;
      let q = parseInt(qty.value, 10);
      if (isNaN(q) || q < 1) {
        q = 1;
        qty.value = 1;
      }
      const unit = parseFloat(priceDisplay.getAttribute('data-variant-price'));
      const total = unit * q;
      const [label] = priceDisplay.textContent.split('-');
      priceDisplay.textContent = `${label.trim()} - ${formatMoney(total)}`;
    };

    const getVariants = (form) => {
      const el = form.querySelector('.ProductVariantsJSON');
      if (!el) return [];
      try {
        return JSON.parse(el.textContent);
      } catch {
        return [];
      }
    };

    const getSelectedOptions = (form) => {
      const opts = {};
      form.querySelectorAll('.variant-group').forEach((fs) => {
        const pos = parseInt(fs.dataset.optionPosition, 10);
        const checked = fs.querySelector('input.variant-option-input:checked');
        if (checked) opts[pos] = checked.value;
      });
      return opts;
    };

    const findVariantByOptions = (variants, opts) =>
      variants.find(
        (v) =>
          (!opts[1] || v.option1 === opts[1]) &&
          (!opts[2] || v.option2 === opts[2]) &&
          (!opts[3] || v.option3 === opts[3])
      );

    const setState = (form, variant) => {
      if (!variant) return;
      const idInput = form.querySelector('.product-variant-id');
      const btn = form.querySelector('.quick-add__submit');
      const priceEl = form.querySelector('[data-price-display]');
      if (idInput) idInput.value = variant.id;
      if (btn) btn.toggleAttribute('disabled', !variant.available);
      if (priceEl) {
        priceEl.setAttribute('data-variant-price', variant.price);
        updatePrice(form);
      }

      // NEW: mirror disabled state to quantity UI
      const qtyWrap = form.querySelector('.quantity');
      if (qtyWrap) {
        qtyWrap.classList.toggle('unavailable', !variant.available);
        qtyWrap.querySelectorAll('input, button').forEach((el) => (el.disabled = !variant.available));
        const qtyInput = qtyWrap.querySelector('input[name="quantity"]');
        if (qtyInput) {
          qtyInput.min = 1; // keep min=1 enforced
          if (!variant.available) qtyInput.value = 1; // reset when disabling
        }
      }
    };

    const refreshSelectedClasses = (form) => {
      form.querySelectorAll('.variant-group').forEach((group) => {
        group.querySelectorAll('.variant-option-input').forEach((input) => {
          const label = form.querySelector('label[for="' + input.id + '"]');
          if (!label) return;
          label.classList.toggle('is-selected', input.checked);
        });
      });
    };

    const getVariantMediaMap = (form) => {
      const el = form.querySelector('.VariantMediaJSON');
      if (!el) return {};
      try {
        const arr = JSON.parse(el.textContent);
        const map = {};
        arr.forEach((o) => {
          map[o.id] = o;
        });
        return map;
      } catch {
        return {};
      }
    };

    const updateCardMedia = (form, variant) => {
      if (!variant) return;
      const mediaMap = getVariantMediaMap(form);
      const m = mediaMap[variant.id];
      if (!m || !m.has_media) return;
      const card = form.closest('.card-wrapper');
      if (!card) return;
      const primaryImg = card.querySelector('img[data-card-primary-image]');
      if (!primaryImg) return;
      const parts = [];
      if (m.src_165) parts.push(`${m.src_165} 165w`);
      if (m.src_360) parts.push(`${m.src_360} 360w`);
      if (m.src_533) parts.push(`${m.src_533} 533w`);
      if (m.src_720) parts.push(`${m.src_720} 720w`);
      if (m.src_940) parts.push(`${m.src_940} 940w`);
      if (m.src_1066) parts.push(`${m.src_1066} 1066w`);
      primaryImg.setAttribute('srcset', parts.join(', '));
      primaryImg.setAttribute('src', m.src_533 || m.src_360 || m.src_165);
      if (m.alt) primaryImg.setAttribute('alt', m.alt);
      if (m.width) primaryImg.setAttribute('width', m.width);
      if (m.height) primaryImg.setAttribute('height', m.height);
    };

    /* ===== Dependency-aware availability (fixed) ===== */

    // Is a given value possible, given the other current selections?
    const valuePossible = (variants, position, value, selected) => {
      return variants.some(
        (v) =>
          v.available &&
          v[`option${position}`] === value &&
          (!selected[1] || position === 1 || v.option1 === selected[1]) &&
          (!selected[2] || position === 2 || v.option2 === selected[2]) &&
          (!selected[3] || position === 3 || v.option3 === selected[3])
      );
    };

    // Recompute pills every time anything changes
    const syncAvailability = (form) => {
      const variants = getVariants(form);
      const selected = getSelectedOptions(form);

      form.querySelectorAll('.variant-group').forEach((group) => {
        const pos = parseInt(group.dataset.optionPosition, 10);

        group.querySelectorAll('input.variant-option-input').forEach((input) => {
          const label = form.querySelector(`label[for="${input.id}"]`);
          const possible = valuePossible(variants, pos, input.value, selected);

          // let JS control availability completely (clear any server-side disabled)
          input.disabled = !possible;
          if (label) {
            label.classList.toggle('is-unavailable', !possible);
            label.setAttribute('aria-disabled', !possible ? 'true' : 'false');
          }
        });

        // If the checked value is no longer possible, auto-pick the first possible
        const checked = group.querySelector('input.variant-option-input:checked');
        if (!checked || checked.disabled) {
          const fallback = group.querySelector('input.variant-option-input:not([disabled])');
          if (fallback) fallback.checked = true;
        }
      });
    };

    /* ===== Wire up each product form ===== */
    document.querySelectorAll('form[data-type="add-to-cart-form"]').forEach((form) => {
      const variants = getVariants(form);
      if (!variants.length) return;

      // qty listeners
      const qty = form.querySelector('input[name="quantity"]');
      if (qty) {
        qty.min = 1; // <- enforce min attribute
        if (!qty.value || parseInt(qty.value, 10) < 1) qty.value = 1;
        updatePrice(form);
        ['change', 'input'].forEach((evt) => qty.addEventListener(evt, () => updatePrice(form)));
        const wrapper = qty.closest('.quantity');
        if (wrapper) {
          wrapper
            .querySelectorAll('button[name="minus"],button[name="plus"]')
            .forEach((btn) => btn.addEventListener('click', () => setTimeout(() => updatePrice(form), 10)));
        }
      }

      // IMPORTANT: unfreeze any server-side disabled pills so JS can re-enable them
      form.querySelectorAll('input.variant-option-input').forEach((input) => {
        input.disabled = false;
        const label = form.querySelector(`label[for="${input.id}"]`);
        if (label) label.classList.remove('is-unavailable');
      });

      // Ensure one selection per group, preferring an enabled radio
      form.querySelectorAll('.variant-group').forEach((fs) => {
        let checked = fs.querySelector('input.variant-option-input:checked');
        if (!checked) {
          const first = fs.querySelector('input.variant-option-input');
          if (first) first.checked = true;
        }
      });

      // First pass: compute availability with the current (or default) selections
      syncAvailability(form);

      // Resolve a concrete variant & sync UI
      let current =
        findVariantByOptions(variants, getSelectedOptions(form)) || variants.find((v) => v.available) || variants[0];
      setState(form, current);
      updateCardMedia(form, current);
      refreshSelectedClasses(form);

      // On any option change, recompute, then resolve + sync
      form.querySelectorAll('input.variant-option-input').forEach((input) => {
        input.addEventListener('change', () => {
          syncAvailability(form);
          refreshSelectedClasses(form);

          const sel = getSelectedOptions(form);
          let v = findVariantByOptions(variants, sel);
          if (!v) {
            // fallback: first available that matches as many selections as possible
            v =
              variants.find(
                (variant) =>
                  variant.available &&
                  (!sel[1] || variant.option1 === sel[1]) &&
                  (!sel[2] || variant.option2 === sel[2]) &&
                  (!sel[3] || variant.option3 === sel[3])
              ) ||
              variants.find((variant) => variant.available) ||
              variants[0];

            if (v) {
              [1, 2, 3].forEach((pos) => {
                const val = v[`option${pos}`];
                const radio = form.querySelector(
                  `.variant-group[data-option-position="${pos}"] input.variant-option-input[value="${CSS.escape(val)}"]`
                );
                if (radio && !radio.disabled) radio.checked = true;
              });
              refreshSelectedClasses(form);
            }
          }

          setState(form, v);
          updateCardMedia(form, v);
        });
      });
    });
  });
</script>
